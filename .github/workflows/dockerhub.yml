name: Build image and push to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Repository Checkout
        uses: actions/checkout@v2

      - name: Docker Hub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_PASSWORD }}

      - name: Generate a unique tag
        id: vars
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV

      - name: build and push main_library
        id: build_mainlib
        run: |
          docker build -t milenaj/mainlib:${{ env.IMAGE_TAG }} ./lab12/main-library
          docker push milenaj/mainlib:${{ env.IMAGE_TAG }}

      - name: build and push city_library
        id: build_citylib
        run: |
          docker build -t milenaj/citylib:${{ env.IMAGE_TAG }} ./lab12/city-library
          docker push milenaj/citylib:${{ env.IMAGE_TAG }}

      - name: Debug Image Digest
        run: |
          echo "Main Library tag: ${{ env.IMAGE_TAG }}"


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Generate a unique tag
        id: vars
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV

      - name: Copy Files
        run: |
          sudo mkdir -p /.minikube/profiles/minikube
          echo "${{ secrets.CA_CERT }}" | sudo tee /.minikube/ca.crt > /dev/null
          echo "${{ secrets.CLIENT_CERT }}" | sudo tee /.minikube/profiles/minikube/client.crt > /dev/null
          echo "${{ secrets.CLIENT_KEY }}" | sudo tee /.minikube/profiles/minikube/client.key > /dev/null
          sudo mkdir -p $HOME/.kube
          sudo cp kubeconfig.yaml $HOME/.kube/config
      
      - name: Set Up kubectl
        uses: azure/setup-kubectl@v1

      - name: Run kubectl Commands
        run: |
          echo "Main Library Digest: ${{ env.IMAGE_TAG }}"
          kubectl get pods --insecure-skip-tls-verify
          kubectl set image deployment/mainlibdepl mainlibrary=milenaj/mainlib:${{ env.IMAGE_TAG }} --insecure-skip-tls-verify
          kubectl set image deployment/citylibdepl citylibrary=milenaj/citylib:${{ env.IMAGE_TAG }} --insecure-skip-tls-verify
